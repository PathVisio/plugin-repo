<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20181221134725.052' name='PathVisio Plugin Repository'>
  <resource id='TissueAnalyzer/1.0.0' presentationname='TissueAnalyzer' symbolicname='TissueAnalyzer' uri='plugins/TissueAnalyzer/1.0.0/TissueAnalyzer-1.0.0.jar' version='1.0.0'>
    <size>
      96083
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='TissueAnalyzer'/>
      <p n='symbolicname' v='TissueAnalyzer'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.tissueanalyzer'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.tissueanalyzer.gui'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.tissueanalyzer.plugin'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.tissueanalyzer.utils'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gex)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gex; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.visualization)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.visualization; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb.construct)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb.construct; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='com.google.collect/1.0.0.v201105210816' presentationname='Google Collections' symbolicname='com.google.collect' uri='libs/com.google.collect/1.0.0/com.google.collect-1.0.0.jar' version='1.0.0.v201105210816'>
    <size>
      618425
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Google Collections'/>
      <p n='symbolicname' v='com.google.collect'/>
      <p n='version' t='version' v='1.0.0.v201105210816'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.annotations'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.base'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.base.internal'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.collect'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='com.springsource.javax.servlet/2.5.0' presentationname='Java Servlet API' symbolicname='com.springsource.javax.servlet' uri='libs/com.springsource.javax.servlet/2.5.0/com.springsource.javax.servlet-2.5.0.jar' version='2.5.0'>
    <size>
      89582
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Servlet API'/>
      <p n='symbolicname' v='com.springsource.javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.http'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.resources'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
  </resource>
  <resource id='com.springsource.org.apache.commons.logging/1.1.1' presentationname='Apache Commons Logging' symbolicname='com.springsource.org.apache.commons.logging' uri='libs/com.springsource.org.apache.commons.logging/1.1.1/com.springsource.org.apache.commons.logging-1.1.1.jar' version='1.1.1'>
    <size>
      61464
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Logging'/>
      <p n='symbolicname' v='com.springsource.org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='uses' v='javax.servlet,org.apache.avalon.framework.logger,org.apache.commons.logging,org.apache.log,org.apache.log4j'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.1.3)(version&lt;=4.1.3))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.logger ;version=[4.1.3,4.1.3]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=1.0.1)(version&lt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.log ;version=[1.0.1,1.0.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.jdom/1.1.0' presentationname='JDOM DOM Processor' symbolicname='com.springsource.org.jdom' uri='libs/com.springsource.org.jdom/1.1.0/com.springsource.org.jdom-1.1.0.jar' version='1.1.0'>
    <size>
      153319
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JDOM DOM Processor'/>
      <p n='symbolicname' v='com.springsource.org.jdom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom'/>
      <p n='uses' v='org.jdom.filter'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.adapters'/>
      <p n='uses' v='org.jdom,org.w3c.dom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.filter'/>
      <p n='uses' v='org.jdom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.input'/>
      <p n='uses' v='javax.xml.parsers,org.jdom,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.output'/>
      <p n='uses' v='org.jdom,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.transform'/>
      <p n='uses' v='javax.xml.transform.sax,org.jdom,org.jdom.input,org.jdom.output,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.xpath'/>
      <p n='uses' v='org.jaxen,org.jdom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jaxen ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.jdom)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jaxen.jdom ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.org.jfree/1.0.12' presentationname='JFree JCommon Runtime' symbolicname='com.springsource.org.jfree' uri='libs/com.springsource.org.jfree/1.0.12/com.springsource.org.jfree-1.0.12.jar' version='1.0.12'>
    <size>
      311612
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JFree JCommon Runtime'/>
      <p n='symbolicname' v='com.springsource.org.jfree'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.keypoint'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.base'/>
      <p n='uses' v='org.jfree.base.config,org.jfree.base.modules,org.jfree.util'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.base.config'/>
      <p n='uses' v='org.jfree.util'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.base.log'/>
      <p n='uses' v='org.jfree.base.modules,org.jfree.util'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.base.modules'/>
      <p n='uses' v='org.jfree.base,org.jfree.base.config,org.jfree.util'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.date'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.io'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.layout'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.resources'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.text'/>
      <p n='uses' v='org.jfree.ui'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.threads'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.ui'/>
      <p n='uses' v='javax.swing,javax.swing.event,javax.swing.table,javax.swing.text,org.jfree.date,org.jfree.util'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.ui.about'/>
      <p n='uses' v='javax.swing,org.jfree.base,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.ui.about.resources'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.ui.action'/>
      <p n='uses' v='javax.swing'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.ui.tabbedui'/>
      <p n='uses' v='javax.swing,javax.swing.event'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.util'/>
      <p n='uses' v='javax.swing,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.12'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.accessibility)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.accessibility
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
  </resource>
  <resource id='com.springsource.org.jfree.chart/1.0.9' presentationname='JFree Chart' symbolicname='com.springsource.org.jfree.chart' uri='libs/com.springsource.org.jfree.chart/1.0.9/com.springsource.org.jfree.chart-1.0.9.jar' version='1.0.9'>
    <size>
      1302081
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JFree Chart'/>
      <p n='symbolicname' v='com.springsource.org.jfree.chart'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart'/>
      <p n='uses' v='javax.swing,org.jfree.chart.axis,org.jfree.chart.entity,org.jfree.chart.event,org.jfree.chart.imagemap,org.jfree.chart.plot,org.jfree.chart.title,org.jfree.data.category,org.jfree.data.general,org.jfree.data.statistics,org.jfree.data.xy,org.jfree.ui,org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.annotations'/>
      <p n='uses' v='org.jfree.chart.axis,org.jfree.chart.plot,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.axis'/>
      <p n='uses' v='org.jfree.chart.event,org.jfree.chart.plot,org.jfree.data,org.jfree.data.category,org.jfree.data.time,org.jfree.text,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.block'/>
      <p n='uses' v='org.jfree.chart.entity,org.jfree.data,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.demo'/>
      <p n='uses' v='javax.swing,org.jfree.chart,org.jfree.data.category,org.jfree.data.general,org.jfree.data.xy'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.editor'/>
      <p n='uses' v='javax.swing,org.jfree.chart,org.jfree.chart.axis,org.jfree.chart.plot,org.jfree.chart.title,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.encoders'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.entity'/>
      <p n='uses' v='org.jfree.chart.imagemap,org.jfree.data.category,org.jfree.data.general,org.jfree.data.xy'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.event'/>
      <p n='uses' v='org.jfree.chart,org.jfree.chart.axis,org.jfree.chart.plot,org.jfree.chart.title'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.imagemap'/>
      <p n='uses' v='org.jfree.chart'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.labels'/>
      <p n='uses' v='org.jfree.data.category,org.jfree.data.contour,org.jfree.data.general,org.jfree.data.xy,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.needle'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.plot'/>
      <p n='uses' v='org.jfree.chart,org.jfree.chart.annotations,org.jfree.chart.axis,org.jfree.chart.event,org.jfree.chart.labels,org.jfree.chart.needle,org.jfree.chart.renderer,org.jfree.chart.renderer.category,org.jfree.chart.renderer.xy,org.jfree.chart.title,org.jfree.chart.urls,org.jfree.data,org.jfree.data.category,org.jfree.data.contour,org.jfree.data.general,org.jfree.data.xy,org.jfree.text,org.jfree.ui,org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.plot.dial'/>
      <p n='uses' v='org.jfree.chart.plot,org.jfree.data.general,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.renderer'/>
      <p n='uses' v='org.jfree.chart,org.jfree.chart.axis,org.jfree.chart.entity,org.jfree.chart.event,org.jfree.chart.labels,org.jfree.chart.plot,org.jfree.data.xy'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.renderer.category'/>
      <p n='uses' v='javax.swing,org.jfree.chart,org.jfree.chart.axis,org.jfree.chart.entity,org.jfree.chart.event,org.jfree.chart.labels,org.jfree.chart.plot,org.jfree.chart.renderer,org.jfree.chart.urls,org.jfree.data,org.jfree.data.category,org.jfree.data.gantt,org.jfree.data.statistics,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.renderer.xy'/>
      <p n='uses' v='org.jfree.chart,org.jfree.chart.annotations,org.jfree.chart.axis,org.jfree.chart.entity,org.jfree.chart.event,org.jfree.chart.labels,org.jfree.chart.plot,org.jfree.chart.renderer,org.jfree.chart.urls,org.jfree.data,org.jfree.data.general,org.jfree.data.xy,org.jfree.ui,org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.resources'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.servlet'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.jfree.chart'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.title'/>
      <p n='uses' v='org.jfree.chart,org.jfree.chart.axis,org.jfree.chart.block,org.jfree.chart.event,org.jfree.chart.renderer,org.jfree.data,org.jfree.data.general,org.jfree.ui'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.urls'/>
      <p n='uses' v='org.jfree.data.category,org.jfree.data.general,org.jfree.data.xy'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.chart.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data'/>
      <p n='uses' v='org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.category'/>
      <p n='uses' v='org.jfree.data.general,org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.contour'/>
      <p n='uses' v='org.jfree.data'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.function'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.gantt'/>
      <p n='uses' v='org.jfree.data.general,org.jfree.data.time'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.general'/>
      <p n='uses' v='org.jfree.data,org.jfree.data.category,org.jfree.data.function,org.jfree.data.xy,org.jfree.util'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.io'/>
      <p n='uses' v='org.jfree.data.category'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.jdbc'/>
      <p n='uses' v='org.jfree.data'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.resources'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.statistics'/>
      <p n='uses' v='org.jfree.data,org.jfree.data.xy'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.time'/>
      <p n='uses' v='org.jfree.data,org.jfree.data.general,org.jfree.data.xy,org.jfree.date'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.time.ohlc'/>
      <p n='uses' v='org.jfree.data,org.jfree.data.time'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.xml'/>
      <p n='uses' v='org.jfree.data.category,org.jfree.data.general,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jfree.data.xy'/>
      <p n='uses' v='org.jfree.data,org.jfree.data.general'/>
      <p n='version' t='version' v='1.0.9'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.keypoint)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.keypoint ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.base)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.base ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.date)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.date ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.io)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.io ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.layout)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.layout ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.text)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.text ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.ui)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.ui ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.ui.about)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.ui.about ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jfree.util)(version&gt;=1.0.12)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jfree.util ;version=[1.0.12,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='derby/10.4.2000000.689064' presentationname='Apache Derby 10.4' symbolicname='derby' uri='libs/derby/10.4.2000000/derby-10.4.2000000.jar' version='10.4.2000000.689064'>
    <size>
      2518773
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='1'/>
      <p n='presentationname' v='Apache Derby 10.4'/>
      <p n='symbolicname' v='derby'/>
      <p n='version' t='version' v='10.4.2000000.689064'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.authentication'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.database'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.jdbc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.vti'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='javax.activation/1.1.0.v201105071233' presentationname='Apache Geronimo Activation Plug-in' symbolicname='javax.activation' uri='libs/javax.activation/1.1.0/javax.activation-1.1.0.jar' version='1.1.0.v201105071233'>
    <size>
      54434
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Geronimo Activation Plug-in'/>
      <p n='symbolicname' v='javax.activation'/>
      <p n='version' t='version' v='1.1.0.v201105071233'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='vendor' v='geronimo'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.activation.handlers'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4))
    </require>
  </resource>
  <resource id='javax.servlet/3.0.0.v201103241727' presentationname='Servlet API Bundle' symbolicname='javax.servlet' uri='libs/javax.servlet/3.0.0/javax.servlet-3.0.0.jar' version='3.0.0.v201103241727'>
    <description>
      glassfish javax.servlet.3.1.0.b33
    </description>
    <size>
      200385
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Servlet API Bundle'/>
      <p n='symbolicname' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0.v201103241727'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet'/>
      <p n='uses' v='javax.servlet.annotation,javax.servlet.descriptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.annotation'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.descriptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.http'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.resources'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.wsdl/1.5.1.v201012040544' presentationname='WSDL4J' symbolicname='javax.wsdl' uri='libs/javax.wsdl/1.5.1/javax.wsdl-1.5.1.jar' version='1.5.1.v201012040544'>
    <size>
      145265
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='WSDL4J'/>
      <p n='symbolicname' v='javax.wsdl'/>
      <p n='version' t='version' v='1.5.1.v201012040544'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.extensions'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.extensions.http'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.extensions.mime'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.extensions.schema'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.extensions.soap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.factory'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.util.xml'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ibm.wsdl.xml'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.extensions'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.extensions.http'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.extensions.mime'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.extensions.schema'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.extensions.soap'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.factory'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.wsdl.xml'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xerces)(version&gt;=2.8.0)(!(version&gt;=3.0.0)))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.apache.xerces; [2.8.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='javax.xml/1.3.4.v201005080400' presentationname='JAXP XML' symbolicname='javax.xml' uri='libs/javax.xml/1.3.4/javax.xml-1.3.4.jar' version='1.3.4.v201005080400'>
    <size>
      237996
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JAXP XML'/>
      <p n='symbolicname' v='javax.xml'/>
      <p n='version' t='version' v='1.3.4.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.datatype'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.parsers'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.sax'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.stream'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.validation'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.xpath'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlcommons'/>
      <p n='version' t='version' v='1.3.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.bootstrap'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.css'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.events'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.html'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.ls'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.ranges'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.stylesheets'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.traversal'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.views'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.xpath'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.ext'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.helpers'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='javax.xml.rpc/1.1.0.v201005080400' presentationname='JAX-RPC' symbolicname='javax.xml.rpc' uri='libs/javax.xml.rpc/1.1.0/javax.xml.rpc-1.1.0.jar' version='1.1.0.v201005080400'>
    <size>
      34666
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JAX-RPC'/>
      <p n='symbolicname' v='javax.xml.rpc'/>
      <p n='version' t='version' v='1.1.0.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.messaging'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.encoding'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler.soap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.holders'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.server'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.soap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xerces)(version&gt;=2.8.0)(!(version&gt;=3.0.0)))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.apache.xerces; [2.8.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4))
    </require>
  </resource>
  <resource id='javax.xml.soap/1.3.0.v201105210645' presentationname='SAAJ' symbolicname='javax.xml.soap' uri='libs/javax.xml.soap/1.3.0/javax.xml.soap-1.3.0.jar' version='1.3.0.v201105210645'>
    <size>
      26862
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SAAJ'/>
      <p n='symbolicname' v='javax.xml.soap'/>
      <p n='version' t='version' v='1.3.0.v201105210645'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.soap'/>
      <p n='uses' v='javax.activation,  javax.xml.namespace,  javax.xml.transform,  org.w3c.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='org.apache.axis/1.4.0.v201005080400' presentationname='Apache Web Services' symbolicname='org.apache.axis' uri='libs/org.apache.axis/1.4.0/org.apache.axis-1.4.0.jar' version='1.4.0.v201005080400'>
    <size>
      1542503
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Web Services'/>
      <p n='symbolicname' v='org.apache.axis'/>
      <p n='version' t='version' v='1.4.0.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.attachments'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.client.async'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.collections'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.compiler'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.encoding'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.image'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.jms'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.logger'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.net'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.script'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.threadpool'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.components.uuid'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.configuration'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.constants'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.deployment.wsdd'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.deployment.wsdd.providers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.description'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.encoding'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.encoding.ser'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.encoding.ser.castor'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.enum'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.handlers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.handlers.http'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.handlers.soap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.holders'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.i18n'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.management'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.management.jmx'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.message'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.monitor'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.providers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.providers.java'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.schema'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.security'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.security.servlet'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.security.simple'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.server'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.session'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.soap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.strategies'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.tools.ant.axis'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.tools.ant.foreach'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.tools.ant.wsdl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.transport.http'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.transport.java'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.transport.jms'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.transport.local'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.transport.mail'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.types'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.utils'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.utils.bytecode'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.utils.cache'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.wsdl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.wsdl.fromJava'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.wsdl.gen'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.wsdl.symbolTable'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.axis.wsdl.toJava'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; [1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.soap)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.soap; [1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.wsdl)(version&gt;=1.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.wsdl; [1.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.discovery)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.discovery; [0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.ant)(version&gt;=1.6.5)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.apache.ant; [1.6.5,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging.impl)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging.impl ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4))
    </require>
  </resource>
  <resource id='org.apache.batik.bridge/1.7.0.v201011041433' presentationname='Apache Batik Bridge/GVT/Scripting' symbolicname='org.apache.batik.bridge' uri='libs/org.apache.batik.bridge/1.7.0/org.apache.batik.bridge-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      903806
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik Bridge/GVT/Scripting'/>
      <p n='symbolicname' v='org.apache.batik.bridge'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.bridge'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.bridge.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.bridge.svg12'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.event'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.filter'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.flow'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.font'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.renderer'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.svg12'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.gvt.text'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.script'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.script.rhino'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.script.rhino.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.script.rhino.svg12'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='META-INF.services'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.css)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.css; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom.svg)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom.svg; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.ext.awt)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.ext.awt; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.parser)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.parser; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util.gui)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util.gui; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.xml)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.xml; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.css/1.7.0.v201011041433' presentationname='Apache Batik CSS' symbolicname='org.apache.batik.css' uri='libs/org.apache.batik.css/1.7.0/org.apache.batik.css-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      343722
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik CSS'/>
      <p n='symbolicname' v='org.apache.batik.css'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.dom'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.sac'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.value'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.value.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.value.css2'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.value.svg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.engine.value.svg12'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.parser'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.css.parser.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.css.sac)(version&gt;=1.3.0)(!(version&gt;=1.4.0))(provenance=W3C)(mandatory:&lt;*provenance))' multiple='false' name='package' optional='false'>
      Import package org.w3c.css.sac ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.dom/1.7.0.v201011041433' presentationname='Apache Batik DOM' symbolicname='org.apache.batik.dom' uri='libs/org.apache.batik.dom/1.7.0/org.apache.batik.dom-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      197986
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik DOM'/>
      <p n='symbolicname' v='org.apache.batik.dom'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.events'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.traversal'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.util'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.xbl'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='content' v='ApacheBatik'/>
      <p n='mandatory' v='content'/>
      <p n='package' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.css)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.css; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.xml)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.xml; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.css)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.css
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.css.sac)(version&gt;=1.3.0)(!(version&gt;=1.4.0))(provenance=W3C)(mandatory:&lt;*provenance))' multiple='false' name='package' optional='false'>
      Import package org.w3c.css.sac ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.parsers
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4)(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4)(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.dom.svg/1.7.0.v201011041433' presentationname='Apache Batik SVG DOM' symbolicname='org.apache.batik.dom.svg' uri='libs/org.apache.batik.dom.svg/1.7.0/org.apache.batik.dom.svg-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      746973
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik SVG DOM'/>
      <p n='symbolicname' v='org.apache.batik.dom.svg'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.anim'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.svg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.svg.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.dom.svg12'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.anim'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.anim.timing'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.anim.values'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.css)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.css; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.parser)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.parser; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.css.sac)(version&gt;=1.3.0)(!(version&gt;=1.4.0))(provenance=W3C)(mandatory:&lt;*provenance))' multiple='false' name='package' optional='false'>
      Import package org.w3c.css.sac ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.smil)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.smil ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4)(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4)(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.ext.awt/1.7.0.v201011041433' presentationname='Apache Batik AWT Utilities' symbolicname='org.apache.batik.ext.awt' uri='libs/org.apache.batik.ext.awt/1.7.0/org.apache.batik.ext.awt-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      579489
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik AWT Utilities'/>
      <p n='symbolicname' v='org.apache.batik.ext.awt'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.color'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.font'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.g2d'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.geom'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.codec'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.codec.jpeg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.codec.png'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.codec.tiff'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.codec.util'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.renderable'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.rendered'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.spi'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.awt.image.spi.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.swing'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.ext.swing.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='META-INF.services'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util.gui)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util.gui; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.extension/1.7.0.v201011041433' presentationname='Apache Batik Extension' symbolicname='org.apache.batik.extension' uri='libs/org.apache.batik.extension/1.7.0/org.apache.batik.extension-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      87807
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik Extension'/>
      <p n='symbolicname' v='org.apache.batik.extension'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.extension'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.extension.svg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='META-INF.services'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.bridge)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.bridge; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.css)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.css; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom.svg)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom.svg; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.ext.awt)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.ext.awt; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.parser)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.parser; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.parser/1.7.0.v201011041433' presentationname='Apache Batik Parser' symbolicname='org.apache.batik.parser' uri='libs/org.apache.batik.parser/1.7.0/org.apache.batik.parser-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      93268
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik Parser'/>
      <p n='symbolicname' v='org.apache.batik.parser'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.parser'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.parser.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.parser.style.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.ext.awt)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.ext.awt; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.xml)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.xml; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.svggen/1.7.0.v201011041433' presentationname='Apache Batik SVG Generation' symbolicname='org.apache.batik.svggen' uri='libs/org.apache.batik.svggen/1.7.0/org.apache.batik.svggen-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      241356
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik SVG Generation'/>
      <p n='symbolicname' v='org.apache.batik.svggen'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.svggen'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.svggen.font'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.svggen.font.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.svggen.font.table'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.ext.awt)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.ext.awt; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.transcoder/1.7.0.v201011041433' presentationname='Apache Batik Transcoder' symbolicname='org.apache.batik.transcoder' uri='libs/org.apache.batik.transcoder/1.7.0/org.apache.batik.transcoder-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      141682
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik Transcoder'/>
      <p n='symbolicname' v='org.apache.batik.transcoder'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.image'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.image.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.keys'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.print'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.svg2svg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.wmf'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.transcoder.wmf.tosvg'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.bridge)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.bridge; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.dom.svg)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.dom.svg; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.ext.awt)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.ext.awt; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.svggen)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.svggen; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.xml)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.xml; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.svg ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.util/1.7.0.v201011041433' presentationname='Apache Batik Utilities' symbolicname='org.apache.batik.util' uri='libs/org.apache.batik.util/1.7.0/org.apache.batik.util-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      150535
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik Utilities'/>
      <p n='symbolicname' v='org.apache.batik.util'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik'/>
      <p n='version' t='version' v='17.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.i18n'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.io'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.io.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util.gui)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util.gui; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.util.gui/1.7.0.v200903091627' presentationname='Apache Batik GUI Utilities' symbolicname='org.apache.batik.util.gui' uri='libs/org.apache.batik.util.gui/1.7.0/org.apache.batik.util.gui-1.7.0.jar' version='1.7.0.v200903091627'>
    <size>
      201287
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik GUI Utilities'/>
      <p n='symbolicname' v='org.apache.batik.util.gui'/>
      <p n='version' t='version' v='1.7.0.v200903091627'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.gui'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.gui.resource'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.gui.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.gui.resources.flags'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.util.gui.xmleditor'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.batik.xml/1.7.0.v201011041433' presentationname='Apache Batik XML' symbolicname='org.apache.batik.xml' uri='libs/org.apache.batik.xml/1.7.0/org.apache.batik.xml-1.7.0.jar' version='1.7.0.v201011041433'>
    <size>
      46837
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Batik XML'/>
      <p n='symbolicname' v='org.apache.batik.xml'/>
      <p n='version' t='version' v='1.7.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.xml'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.batik.xml.scanner.resources'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.batik.util)(version&gt;=1.7.0)(!(version&gt;=1.8.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.batik.util; [1.7.0,1.8.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.apache.commons.codec/1.5.0' presentationname='Commons Codec' symbolicname='org.apache.commons.codec' uri='libs/org.apache.commons.codec/1.5/org.apache.commons.codec-1.5.jar' version='1.5.0'>
    <description>
      The codec package contains simple encoder and decoders for
           various formats such as Base64 and Hexadecimal.  In addition
       to these     widely used encoders and decoders, the codec
       package also maintains a     collection of phonetic encoding
       utilities.
    </description>
    <size>
      73098
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/codec/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Codec'/>
      <p n='symbolicname' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.net'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.digest'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.binary'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.codec/1.6.0' presentationname='Commons Codec' symbolicname='org.apache.commons.codec' uri='libs/org.apache.commons.codec/1.6.0/org.apache.commons.codec-1.6.0.jar' version='1.6.0'>
    <description>
      The codec package contains simple encoder and decoders for
           various formats such as Base64 and Hexadecimal.  In addition
       to these     widely used encoders and decoders, the codec
       package also maintains a     collection of phonetic encoding
       utilities.
    </description>
    <size>
      232771
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/codec/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Codec'/>
      <p n='symbolicname' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.net'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language.bm'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.digest'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.binary'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.discovery/0.2.0.v201004190315' presentationname='Jakarta-Commons Discovery' symbolicname='org.apache.commons.discovery' uri='libs/org.apache.commons.discovery/0.2.0/org.apache.commons.discovery-0.2.0.jar' version='0.2.0.v201004190315'>
    <size>
      67965
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jakarta-Commons Discovery'/>
      <p n='symbolicname' v='org.apache.commons.discovery'/>
      <p n='version' t='version' v='0.2.0.v201004190315'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.ant'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.jdk'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.log'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.resource'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.resource.classes'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.resource.names'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.discovery.tools'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.junit)(version&gt;=3.8.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.junit; 3.8.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4))
    </require>
  </resource>
  <resource id='org.apache.commons.httpclient/3.0.1.v201005080501' presentationname='Apache Commons Httpclient Plug-in' symbolicname='org.apache.commons.httpclient' uri='libs/org.apache.commons.httpclient/3.0.1/org.apache.commons.httpclient-3.0.1.jar' version='3.0.1.v201005080501'>
    <size>
      293111
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Httpclient Plug-in'/>
      <p n='symbolicname' v='org.apache.commons.httpclient'/>
      <p n='version' t='version' v='3.0.1.v201005080501'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.auth'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.cookie'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.methods'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.methods.multipart'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.params'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.protocol'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.httpclient.util'/>
      <p n='version' t='version' v='3.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.net)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.net ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(|(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='org.apache.commons.io/1.4.0' presentationname='Apache Commons IO Bundle' symbolicname='org.apache.commons.io' uri='libs/org.apache.commons.io/1.4.0/org.apache.commons.io.jar-1.4.0.jar' version='1.4.0'>
    <size>
      109043
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons IO Bundle'/>
      <p n='symbolicname' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.comparator)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.comparator ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.filefilter)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.filefilter ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.input)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.input ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=1.4.0
    </require>
  </resource>
  <resource id='org.apache.commons.io/2.4.0' presentationname='Commons IO' symbolicname='org.apache.commons.io' uri='libs/org.apache.commons.io/2.4.0/org.apache.commons.io-2.4.0.jar' version='2.4.0'>
    <description>
      The Commons IO library contains utility classes, stream implementations,
       file filters, file comparators, endian transformation classes,
       and much more.
    </description>
    <size>
      185140
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/io/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons IO'/>
      <p n='symbolicname' v='org.apache.commons.io'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.monitor'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.logging/1.1.3' presentationname='Commons Logging' symbolicname='org.apache.commons.logging' uri='libs/org.apache.commons.logging/1.1.3/org.apache.commons.logging-1.1.3.jar' version='1.1.3'>
    <description>
      Commons Logging is a thin adapter allowing configurable bridging
       to other,    well known logging systems.
    </description>
    <size>
      62050
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/proper/commons-logging/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Logging'/>
      <p n='symbolicname' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.1.3)(version&lt;=4.1.5))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.logger ;version=[4.1.3,4.1.5]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=1.0.1)(version&lt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.log ;version=[1.0.1,1.0.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.commons.math/2.0.0' presentationname='Commons Math' symbolicname='org.apache.commons.math' uri='libs/org.apache.commons.math/2.0/org.apache.commons.math-2.0.jar' version='2.0.0'>
    <description>
      The Math project is a library of lightweight, self-contained
       mathematics and statistics components addressing the most
       common practical problems not immediately available in the
       Java programming language or commons-lang.
    </description>
    <size>
      759268
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/math/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Math'/>
      <p n='symbolicname' v='org.apache.commons.math'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.interpolation'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.special'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.regression'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.correlation'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.clustering'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.ranking'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.sampling'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.genetics'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.polynomials'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.linear'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.univariate'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.nonstiff'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.direct'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.general'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.distribution'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.events'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.summary'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.geometry'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.linear'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.estimation'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.integration'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.rank'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.fraction'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.random'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.complex'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.transform'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.inference'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.fitting'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.moment'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.solvers'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.analysis)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.analysis ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.analysis.integration)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.analysis.integration
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.analysis.interpolation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.analysis.interpolation
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.analysis.polynomials)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.analysis.polynomials
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.analysis.solvers)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.analysis.solvers ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.complex)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.complex ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.distribution)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.distribution ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.estimation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.estimation ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.fraction)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.fraction ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.genetics)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.genetics ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.geometry)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.geometry ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.linear)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.linear ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.ode)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.ode ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.ode.events)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.ode.events ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.ode.nonstiff)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.ode.nonstiff ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.ode.sampling)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.ode.sampling ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization.direct)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization.direct
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization.fitting)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization.fitting
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization.general)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization.general
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization.linear)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization.linear
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.optimization.univariate)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.optimization.univariate
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.random)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.random ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.special)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.special ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.clustering)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.clustering ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.correlation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.correlation ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.descriptive)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.descriptive ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.descriptive.moment)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.descriptive.moment
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.descriptive.rank)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.descriptive.rank
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.descriptive.summary)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.descriptive.summary
       ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.inference)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.inference ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.ranking)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.ranking ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.regression)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.regression ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.transform)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.transform ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.util)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.util ;version=2.0.0
    </require>
  </resource>
  <resource id='org.apache.felix.bundlerepository/1.6.6' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='libs/org.apache.felix.bundlerepository/1.6.6/org.apache.felix.bundlerepository-1.6.6.jar' version='1.6.6'>
    <description>
      Bundle repository service.
    </description>
    <size>
      168279
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-osgi-bundle-repository.html
    </documentation>
    <source>
      http://felix.apache.org/site/downloads.cgi
    </source>
    <capability name='service'>
      <p n='service' v='org.apache.felix.bundlerepository.RepositoryAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Bundle Repository'/>
      <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
      <p n='version' t='version' v='1.6.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.bundlerepository'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.obr ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.main/4.1.0.SNAPSHOT' presentationname='Apache Felix' symbolicname='org.apache.felix.main' uri='libs/org.apache.felix.main/4.1.0/org.apache.felix.main-4.1.0.jar' version='4.1.0.SNAPSHOT'>
    <description>
      OSGi R4 framework.
    </description>
    <size>
      522546
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix'/>
      <p n='symbolicname' v='org.apache.felix.main'/>
      <p n='version' t='version' v='4.1.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.wiring'/>
      <p n='uses' v='org.osgi.resource,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.resolver'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.bundle'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.namespace'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.weaving'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
  </resource>
  <resource id='org.apache.xalan/2.7.1.v201005080400' presentationname='Xalan-Java' symbolicname='org.apache.xalan' uri='libs/org.apache.xalan/2.7.1/org.apache.xalan-2.7.1.jar' version='2.7.1.v201005080400'>
    <size>
      2765467
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Xalan-Java'/>
      <p n='symbolicname' v='org.apache.xalan'/>
      <p n='version' t='version' v='2.7.1.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='META-INF.services'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.regexp'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.client'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.extensions'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.lib'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.lib.sql'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.processor'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.res'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.serialize'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.templates'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.trace'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.transformer'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xslt'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.cmdline'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.cmdline.getopt'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.compiler'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.compiler.util'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.dom'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.runtime'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.runtime.output'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.trax'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.xsltc.util'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.dtm'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.dtm.ref'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.dtm.ref.dom2dtm'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.dtm.ref.sax2dtm'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.res'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.utils'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.utils.res'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.axes'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.compiler'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.domapi'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.functions'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.jaxp'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.objects'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.operations'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.patterns'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.res'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xml.serializer)(version&gt;=2.7.1)(!(version&gt;=3.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.xml.serializer; [2.7.1,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=java_cup.runtime)(version&gt;=0.10.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle java_cup.runtime; 0.10.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.bcel)(version&gt;=5.2.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.apache.bcel; 5.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xerces)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.apache.xerces; [2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4))
    </require>
  </resource>
  <resource id='org.apache.xerces/2.9.0.v201101211617' presentationname='Apache Xerces-J' symbolicname='org.apache.xerces' uri='libs/org.apache.xerces/2.9.0/org.apache.xerces-2.9.0.jar' version='2.9.0.v201101211617'>
    <size>
      1303463
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Xerces-J'/>
      <p n='symbolicname' v='org.apache.xerces'/>
      <p n='version' t='version' v='2.9.0.v201101211617'/>
    </capability>
    <capability name='package'>
      <p n='package' v='META-INF.services'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.html.dom'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml.dom'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom.events'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom3.as'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dtd'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dtd.models'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.dtd'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.util'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.xs'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.io'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.msg'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.validation'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xpath'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xpath.regex'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.identity'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.models'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.opti'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.traversers'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.util'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp.datatype'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp.validation'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.parsers'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.util'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xinclude'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.grammars'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.parser'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xpointer'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xs'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xs.datatypes'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serialize'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.html'/>
      <p n='version' t='version' v='2.9.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml)(version&gt;=1.3.4)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml; [1.3.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xml.resolver)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.xml.resolver; [1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xml.serializer)(version&gt;=2.7.1)(!(version&gt;=3.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.xml.serializer; [2.7.1,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='org.apache.xml.resolver/1.2.0.v201005080400' presentationname='Apache XmlResolver' symbolicname='org.apache.xml.resolver' uri='libs/org.apache.xml.resolver/1.2.0/org.apache.xml.resolver-1.2.0.jar' version='1.2.0.v201005080400'>
    <size>
      96358
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache XmlResolver'/>
      <p n='symbolicname' v='org.apache.xml.resolver'/>
      <p n='version' t='version' v='1.2.0.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.env'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.apps'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.etc'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.readers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.tools'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='org.apache.xml.serializer/2.7.1.v201005080400' presentationname='Apache XML Commons Serializer' symbolicname='org.apache.xml.serializer' uri='libs/org.apache.xml.serializer/2.7.1/org.apache.xml.serializer-2.7.1.jar' version='2.7.1.v201005080400'>
    <size>
      293197
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache XML Commons Serializer'/>
      <p n='symbolicname' v='org.apache.xml.serializer'/>
      <p n='version' t='version' v='2.7.1.v201005080400'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serializer'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serializer.dom3'/>
      <p n='version' t='version' v='2.7.1'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle system.bundle; 0.0.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.2))
    </require>
  </resource>
  <resource id='org.apache.xmlrpc/3.0.0.v20100427-1100' presentationname='Apache XML-RPC Plug-in' symbolicname='org.apache.xmlrpc' uri='libs/org.apache.xmlrpc/3.0.0/org.apache.xmlrpc-3.0.0.jar' version='3.0.0.v20100427-1100'>
    <size>
      229157
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache XML-RPC Plug-in'/>
      <p n='symbolicname' v='org.apache.xmlrpc'/>
      <p n='version' t='version' v='3.0.0.v20100427-1100'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.client.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.common'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.jaxb'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.metadata'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.parser'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.serializer'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.server'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.webserver'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.httpclient
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.httpclient.auth
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.serialize)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.ws.commons.serialize
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.ws.commons.util
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4)(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4)(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.bridgedb/1.1.0' presentationname='org.bridgedb' symbolicname='org.bridgedb' uri='libs/org.bridgedb/1.1.0/org.bridgedb-1.1.0.jar' version='1.1.0'>
    <size>
      45899
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.bridgedb'/>
      <p n='symbolicname' v='org.bridgedb'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='buildsystem'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.file'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.impl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.webservice'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.bridgedb.bio/1.1.0' presentationname='org.bridgedb.bio' symbolicname='org.bridgedb.bio' uri='libs/org.bridgedb.bio/1.1.0/org.bridgedb.bio-1.1.0.jar' version='1.1.0'>
    <size>
      37586
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.bridgedb.bio'/>
      <p n='symbolicname' v='org.bridgedb.bio'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.bio'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
  </resource>
  <resource id='org.bridgedb.gui/1.1.0' presentationname='Gui' symbolicname='org.bridgedb.gui' uri='libs/org.bridgedb.gui/1.1.0/org.bridgedb.gui-1.1.0.jar' version='1.1.0'>
    <size>
      29508
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gui'/>
      <p n='symbolicname' v='org.bridgedb.gui'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.gui'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.bridgerest)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.bridgerest; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.biomart)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.biomart; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.cronos)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.cronos; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.picr)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.picr; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.file.orthoxml)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.file.orthoxml; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.synergizer)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.synergizer; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=com.mysql.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.mysql.jdbc
    </require>
  </resource>
  <resource id='org.bridgedb.rdb/1.1.0' presentationname='org.bridgedb.rdb' symbolicname='org.bridgedb.rdb' uri='libs/org.bridgedb.rdb/1.1.0/org.bridgedb.rdb-1.1.0.jar' version='1.1.0'>
    <size>
      25665
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.bridgedb.rdb'/>
      <p n='symbolicname' v='org.bridgedb.rdb'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.rdb'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.rdb.impl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=derby)(version&gt;=10.4.2000000))' multiple='false' name='bundle' optional='true'>
      Require Bundle derby; 10.4.2000000
    </require>
  </resource>
  <resource id='org.bridgedb.rdb.construct/1.1.0' presentationname='org.bridgedb.rdb.construct' symbolicname='org.bridgedb.rdb.construct' uri='libs/org.bridgedb.rdb.construct/1.1.0/org.bridgedb.rdb.construct-1.1.0.jar' version='1.1.0'>
    <size>
      16331
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.bridgedb.rdb.construct'/>
      <p n='symbolicname' v='org.bridgedb.rdb.construct'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.rdb.construct'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=derby)(version&gt;=10.4.2000000))' multiple='false' name='bundle' optional='false'>
      Require Bundle derby; 10.4.2000000
    </require>
  </resource>
  <resource id='org.bridgedb.webservice.bridgerest/1.1.0' presentationname='org.bridgedb.webservice.bridgerest' symbolicname='org.bridgedb.webservice.bridgerest' uri='libs/org.bridgedb.webservice.bridgerest/1.1.0/org.bridgedb.webservice.bridgerest-1.1.0.jar' version='1.1.0'>
    <size>
      10010
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.bridgedb.webservice.bridgerest'/>
      <p n='symbolicname' v='org.bridgedb.webservice.bridgerest'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bridgedb.webservice.bridgerest'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
  </resource>
  <resource id='org.eclipse.osgi/3.5.2.R35x_v20100126' presentationname='OSGi System Bundle' symbolicname='org.eclipse.osgi' uri='libs/org.eclipse.osgi/3.5.2/org.eclipse.osgi.jar' version='3.5.2.R35x_v20100126'>
    <description>
      OSGi System Bundle
    </description>
    <size>
      1112947
    </size>
    <documentation>
      http://www.eclipse.org
    </documentation>
    <copyright>
      Copyright (c) 2003, 2004 IBM Corporation and others. All rights
       reserved. This program and the accompanying materials  are
       made available under the terms of the Eclipse Public License
       v1.0 which accompanies this distribution, and is available
       at http://www.eclipse.org/legal/epl-v10.html
    </copyright>
    <capability name='service'>
      <p n='service' v='org.osgi.service.packageadmin.PackageAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.permissionadmin.PermissionAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.startlevel.StartLevel'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.eclipse.osgi.service.debug.DebugOptions'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OSGi System Bundle'/>
      <p n='symbolicname' v='org.eclipse.osgi'/>
      <p n='version' t='version' v='3.5.2.R35x_v20100126'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.event'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.console'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.eventmgr'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.log'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.launch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.datalocation'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.debug'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.environment'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.localization'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.pluginconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.resolver'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.runnable'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.urlconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.signedcontent'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storagemanager'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.condpermadmin'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.framework'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.permissionadmin'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.core.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.internal.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.internal.stats'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.core.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.bundlefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.hooks'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.loader'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.debug'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.core'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.bundleentry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.bundleresource'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.reference'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.reliablefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.util'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.baseadaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.composite'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader.buddy'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.module'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.profile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.resolver'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.serviceregistry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.permadmin'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='x-friends' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.verifier'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.update.core,org.eclipse.ui.workbench,org.eclipse.equinox.p2.artifact.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.service.security'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.signedcontent'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.internal.composite'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5)(ee=OSGi/Minimum-1.2))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5)(ee=OSGi/Minimum-1.2))
    </require>
  </resource>
  <resource id='org.junit/4.10.0.v4_10_0_v20120426-0900' presentationname='JUnit Testing Framework' symbolicname='org.junit' uri='libs/org.junit/4.10.0/org.junit-4.10.0.jar' version='4.10.0.v4_10_0_v20120426-0900'>
    <size>
      216871
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JUnit Testing Framework'/>
      <p n='symbolicname' v='org.junit'/>
      <p n='version' t='version' v='4.10.0.v4_10_0_v20120426-0900'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.extensions'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.framework'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.runner'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.textui'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.categories'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.max'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.results'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.runners'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories.internal'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories.suppliers'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.builders'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.matchers'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.requests'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.model'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.rules'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.statements'/>
      <p n='version' t='version' v='4.10.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.matchers'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.rules'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner.manipulation'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner.notification'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runners'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runners.model'/>
      <p n='version' t='version' v='4.10.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.hamcrest.core)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.hamcrest.core; 1.1.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='org.kohsuke.args4j/2.0.12.v200910131500' presentationname='Args4j' symbolicname='org.kohsuke.args4j' uri='libs/org.kohsuke.args4j/2.0.12/org.kohsuke.args4j-2.0.12.jar' version='2.0.12.v200910131500'>
    <size>
      55205
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Args4j'/>
      <p n='symbolicname' v='org.kohsuke.args4j'/>
      <p n='version' t='version' v='2.0.12.v200910131500'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kohsuke.args4j'/>
      <p n='version' t='version' v='2.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kohsuke.args4j.spi'/>
      <p n='version' t='version' v='2.0.12'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='org.osgi.impl.bundle.repoindex.lib/0.0.2.201212241021' presentationname='BIndex2: Repository Index Generator' symbolicname='org.osgi.impl.bundle.repoindex.lib' uri='libs/org.osgi.impl.bundle.repoindex.lib/0.0.2/org.osgi.impl.bundle.repoindex.lib-0.0.2.jar' version='0.0.2.201212241021'>
    <size>
      293126
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='BIndex2: Repository Index Generator'/>
      <p n='symbolicname' v='org.osgi.impl.bundle.repoindex.lib'/>
      <p n='version' t='version' v='0.0.2.201212241021'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.indexer'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='org.pathvisio.biomartconnect/1.0.0' presentationname='org.pathvisio.biomartconnect' symbolicname='org.pathvisio.biomartconnect' uri='plugins/org.pathvisio.biomartconnect/1.0.0/org.pathvisio.biomartconnect-1.0.0.jar' version='1.0.0'>
    <size>
      33453
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.biomartconnect'/>
      <p n='symbolicname' v='org.pathvisio.biomartconnect'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.inforegistry)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.inforegistry; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.biopax3/1.0.0' presentationname='BioPAX plugin' symbolicname='org.pathvisio.biopax3' uri='plugins/org.pathvisio.biopax3/1.0.0/org.pathvisio.biopax3-1.0.0.jar' version='1.0.0'>
    <size>
      12618661
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='BioPAX plugin'/>
      <p n='symbolicname' v='org.pathvisio.biopax3'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.biopax3'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.google.collect)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.google.collect; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=nl.helixsoft.util.xml)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle nl.helixsoft.util.xml; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.client)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.wikipathways.client; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.junit)(version&gt;=4.10.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.junit; 4.10.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.browserlauncher/1.0.0' presentationname='org.pathvisio.browserlauncher' symbolicname='org.pathvisio.browserlauncher' uri='libs/org.pathvisio.browserlauncher/1.0.0/org.pathvisio.browserlauncher-1.0.0.jar' version='1.0.0'>
    <size>
      59848
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.browserlauncher'/>
      <p n='symbolicname' v='org.pathvisio.browserlauncher'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.exception'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.launching'/>
      <p n='uses' v='edu.stanford.ejalbert.exception,edu.stanford.ejalbert.launching.misc,edu.stanford.ejalbert.launching.macos,edu.stanford.ejalbert.launching.windows,net.sf.wraplog'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.launching.misc'/>
      <p n='uses' v='net.sf.wraplog,edu.stanford.ejalbert.exception,edu.stanford.ejalbert.launching'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.testing'/>
      <p n='uses' v='javax.swing,edu.stanford.ejalbert.exceptionhandler,edu.stanford.ejalbert,net.sf.wraplog'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.launching.macos'/>
      <p n='uses' v='edu.stanford.ejalbert.exception,com.apple.MacOS,edu.stanford.ejalbert.launching,com.apple.mrj,edu.stanford.ejalbert,com.apple.mrj.jdirect'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.launching.windows'/>
      <p n='uses' v='edu.stanford.ejalbert.exception,net.sf.wraplog,edu.stanford.ejalbert.launching'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert'/>
      <p n='uses' v='edu.stanford.ejalbert.exception,edu.stanford.ejalbert.launching,net.sf.wraplog,edu.stanford.ejalbert.exceptionhandler'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.exceptionhandler'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='edu.stanford.ejalbert.resources'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.wraplog'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.MacOS)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.apple.MacOS
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.mrj)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.apple.mrj
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.mrj.jdirect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.apple.mrj.jdirect
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.exception
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.exceptionhandler)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.exceptionhandler
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.launching)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.launching
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.launching.macos)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.launching.macos
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.launching.misc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.launching.misc
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.launching.windows)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.launching.windows
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.resources)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.resources
    </require>
    <require extend='false' filter='(&amp;(package=edu.stanford.ejalbert.testing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package edu.stanford.ejalbert.testing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.wraplog)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.wraplog
    </require>
  </resource>
  <resource id='org.pathvisio.comparePathways/1.0.0' presentationname='org.pathvisio.comparePathways' symbolicname='org.pathvisio.comparePathways' uri='plugins/org.pathvisio.compare/1.0.0/org.pathvisio.compare-1.0.0.jar' version='1.0.0'>
    <size>
      43540
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.comparePathways'/>
      <p n='symbolicname' v='org.pathvisio.comparePathways'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=2.0.11))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 2.0.11
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=2.0.11))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 2.0.11
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=2.0.11))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 2.0.11
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.complexviz/0.1.0' presentationname='ComplexViz' symbolicname='org.pathvisio.complexviz' uri='plugins/org.pathvisio.complexviz/0.1.0/org.pathvisio.complexviz-0.1.0.jar' version='0.1.0'>
    <size>
      78704
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ComplexViz'/>
      <p n='symbolicname' v='org.pathvisio.complexviz'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.complexviz'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.complexviz.gui'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.complexviz.plugins'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.gui)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.gui; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.visualization)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.visualization; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.findyourinteraction/1.0.1' presentationname='FindYourInteraction' symbolicname='org.pathvisio.findyourinteraction' uri='plugins/org.pathvisio.findyourinteraction/1.0.1/org.pathvisio.findyourinteraction-1.0.1.jar' version='1.0.1'>
    <description>
      PathVisio plugin to load metabolic reactions from Rhea
    </description>
    <size>
      9964
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      https://github.com/PathVisio/FindYourInteraction
    </documentation>
    <copyright>
      2016-2018 BiGCaT Bioinformatics
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='FindYourInteraction'/>
      <p n='symbolicname' v='org.pathvisio.findyourinteraction'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id='org.pathvisio.findyourinteraction/1.0.0' presentationname='FindYourInteraction' symbolicname='org.pathvisio.findyourinteraction' uri='plugins/org.pathvisio.findyourinteraction/1.0.0/org.pathvisio.findyourinteraction-1.0.0.jar' version='1.0.0'>
    <size>
      15564
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='FindYourInteraction'/>
      <p n='symbolicname' v='org.pathvisio.findyourinteraction'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id='org.pathvisio.go/1.0.0' presentationname='GO Plugin' symbolicname='org.pathvisio.go' uri='plugins/org.pathvisio.go/1.0.0/org.pathvisio.go-1.0.0.jar' version='1.0.0'>
    <size>
      24159
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='GO Plugin'/>
      <p n='symbolicname' v='org.pathvisio.go'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.go'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.obo'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb.construct)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb.construct; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.gsea.ora/1.0.0' presentationname='org.pathvisio.gsea.ora' symbolicname='org.pathvisio.gsea.ora' uri='libs/org.pathvisio.ora/1.0.0/org.pathvisio.ora-1.0.0.jar' version='1.0.0'>
    <size>
      24519
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.gsea.ora'/>
      <p n='symbolicname' v='org.pathvisio.gsea.ora'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora.gsea'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora.zscore'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jfree)(version&gt;=1.0.12))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jfree; 1.0.12
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jfree.chart)(version&gt;=1.0.9))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jfree.chart; 1.0.9
    </require>
  </resource>
  <resource id='org.pathvisio.gsea.plugin/1.0.0' presentationname='org.pathvisio.gsea.plugin' symbolicname='org.pathvisio.gsea.plugin' uri='plugins/org.pathvisio.ora.plugin/1.0.0/org.pathvisio.ora.plugin-1.0.0.jar' version='1.0.0'>
    <size>
      56250
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.gsea.plugin'/>
      <p n='symbolicname' v='org.pathvisio.gsea.plugin'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.gsea'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.gsea.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.ora.plugin'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.gui)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.gui; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gsea.ora)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gsea.ora; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jfree)(version&gt;=1.0.12))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jfree; 1.0.12
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jfree.chart)(version&gt;=1.0.9))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jfree.chart; 1.0.9
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.statistics)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.statistics; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.htmlexport/1.0.0' presentationname='HtmlExport' symbolicname='org.pathvisio.htmlexport' uri='plugins/org.pathvisio.htmlexport/1.0.0/org.pathvisio.htmlexport-1.0.0.jar' version='1.0.0'>
    <size>
      25019
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='HtmlExport'/>
      <p n='symbolicname' v='org.pathvisio.htmlexport'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='about_files'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kohsuke.args4j'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kohsuke.args4j.spi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.htmlexport'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.htmlexport.plugin'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.htmlexport.statistics'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.visualization)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.visualization; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gex)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gex; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.statistics)(version&gt;=2.0.11))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.statistics; 2.0.11
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb.construct)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb.construct; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.gui)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.gui; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.kohsuke.args4j)(version&gt;=2.0.12))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.kohsuke.args4j; 2.0.12
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.inforegistry/1.0.0' presentationname='org.pathvisio.inforegistry' symbolicname='org.pathvisio.inforegistry' uri='libs/org.pathvisio.inforegistry/1.0.0/org.pathvisio.inforegistry-1.0.0.jar' version='1.0.0'>
    <size>
      11356
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.inforegistry'/>
      <p n='symbolicname' v='org.pathvisio.inforegistry'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.inforegistry'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.intviz/1.0.0' presentationname='IntViz' symbolicname='org.pathvisio.intviz' uri='plugins/org.pathvisio.intviz/1.0.0/org.pathvisio.intviz-1.0.0.jar' version='1.0.0'>
    <size>
      648251
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='IntViz'/>
      <p n='symbolicname' v='org.pathvisio.intviz'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.intviz'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.intviz.gui'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.intviz.plugins'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.visualization)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.visualization; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.jgoodies.forms/1.2.0' presentationname='org.pathvisio.jgoodies.forms' symbolicname='org.pathvisio.jgoodies.forms' uri='libs/org.pathvisio.jgoodies.forms/1.2.0/org.pathvisio.jgoodies.forms-1.2.0.jar' version='1.2.0'>
    <size>
      111711
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.jgoodies.forms'/>
      <p n='symbolicname' v='org.pathvisio.jgoodies.forms'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jgoodies.forms.builder'/>
      <p n='uses' v='javax.swing.border,com.jgoodies.forms.factories,javax.swing,com.jgoodies.forms.layout,com.jgoodies.forms.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jgoodies.forms.factories'/>
      <p n='uses' v='javax.swing.border,com.jgoodies.forms.layout,com.jgoodies.forms.util,com.jgoodies.forms.builder,javax.swing'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jgoodies.forms.debug'/>
      <p n='uses' v='javax.swing,com.jgoodies.forms.layout'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jgoodies.forms.util'/>
      <p n='uses' v='javax.swing,com.jgoodies.forms.layout'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jgoodies.forms.layout'/>
      <p n='uses' v='com.jgoodies.forms.util,javax.swing,com.jgoodies.forms.factories'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.jgoodies.forms.builder)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jgoodies.forms.builder
    </require>
    <require extend='false' filter='(&amp;(package=com.jgoodies.forms.debug)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jgoodies.forms.debug
    </require>
    <require extend='false' filter='(&amp;(package=com.jgoodies.forms.factories)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jgoodies.forms.factories
    </require>
    <require extend='false' filter='(&amp;(package=com.jgoodies.forms.layout)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jgoodies.forms.layout
    </require>
    <require extend='false' filter='(&amp;(package=com.jgoodies.forms.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jgoodies.forms.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.border
    </require>
  </resource>
  <resource id='org.pathvisio.mappbuilder/1.0.0' presentationname='MAPPBuilder plugin' symbolicname='org.pathvisio.mappbuilder' uri='plugins/org.pathvisio.mappbuilder/1.0.0/org.pathvisio.mappbuilder-1.0.0.jar' version='1.0.0'>
    <size>
      11784
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='MAPPBuilder plugin'/>
      <p n='symbolicname' v='org.pathvisio.mappbuilder'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.mappbuilder'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.minimap/1.0.0' presentationname='MiniMap' symbolicname='org.pathvisio.minimap' uri='plugins/org.pathvisio.minimap/1.0.0/org.pathvisio.minimap-1.0.0.jar' version='1.0.0'>
    <size>
      4733
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='MiniMap'/>
      <p n='symbolicname' v='org.pathvisio.minimap'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.minimap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.nimwiz/1.0.0' presentationname='org.pathvisio.nimwiz' symbolicname='org.pathvisio.nimwiz' uri='plugins/org.pathvisio.nimwiz/1.0.0/org.pathvisio.nimwiz-1.0.0.jar' version='1.0.0'>
    <size>
      56857
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.nimwiz'/>
      <p n='symbolicname' v='org.pathvisio.nimwiz'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.nimwiz'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.nimwiz.data'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.nimwiz.dialogs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.nimwiz.gui'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.nimwiz.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.pdftranscoder/1.7.0' presentationname='org.pathvisio.pdftranscoder' symbolicname='org.pathvisio.pdftranscoder' uri='libs/org.pathvisio.pdftranscoder/1.7.0/org.pathvisio.pdftranscoder-1.7.0.jar' version='1.7.0'>
    <size>
      769278
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.pdftranscoder'/>
      <p n='symbolicname' v='org.pathvisio.pdftranscoder'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.image'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.fop.datatypes,org.apache.commons.io,org.apache.commons.io.output,org.apache.fop.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='legal'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.fonts'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='uses' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework.configuration'/>
      <p n='uses' v='org.apache.avalon.framework,javax.xml.parsers,org.w3c.dom,org.xml.sax,javax.xml.transform,javax.xml.transform.stream,javax.xml.transform.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework.container'/>
      <p n='uses' v='org.apache.avalon.framework.configuration,org.apache.avalon.framework.parameters,org.apache.avalon.framework.context,org.apache.avalon.framework.component,org.apache.avalon.framework.logger,org.apache.avalon.framework.service,org.apache.avalon.framework.activity'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fo'/>
      <p n='uses' v='org.apache.fop.image,org.apache.commons.logging,org.apache.fop.area,org.apache.fop.fo.pagination,org.xml.sax.helpers,org.apache.fop.render,org.xml.sax,org.apache.fop.apps'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.ps.dsc'/>
      <p n='uses' v='org.apache.xmlgraphics.ps.dsc.events,org.apache.xmlgraphics.ps,org.apache.xmlgraphics.ps.dsc.tools'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.render.ps'/>
      <p n='uses' v='org.apache.batik.transcoder.image,org.apache.batik.parser,org.apache.commons.logging,org.apache.avalon.framework.configuration,org.apache.batik.gvt,org.w3c.dom,org.apache.fop.fonts,org.apache.xmlgraphics.java2d,org.apache.xmlgraphics.java2d.ps,org.apache.batik.transcoder,org.apache.batik.bridge,org.apache.fop.svg,org.apache.xmlgraphics.ps,javax.xml.transform,javax.xml.transform.stream,org.apache.xmlgraphics.ps.dsc,org.apache.fop.render,org.apache.fop.image,org.apache.fop.apps,org.apache.fop.area,org.apache.fop.fo.extensions,org.apache.fop.util,org.apache.fop.area.inline,org.apache.commons.io,org.apache.fop.render.ps.extensions,org.w3c.dom.svg,org.apache.batik.gvt.text,org.apache.batik.gvt.font,org.apache.batik.dom.svg,org.apache.batik.gvt.renderer,org.apache.xmlgraphics.ps.dsc.events,org.apache.xmlgraphics.ps.dsc.tools'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework.activity'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.util.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.render.pdf'/>
      <p n='uses' v='org.apache.fop.area,org.apache.fop.pdf,org.apache.fop.image,org.apache.commons.logging,org.apache.fop.util,org.apache.fop.svg,org.apache.fop.fonts,org.apache.xmlgraphics.java2d,org.apache.fop.apps,org.apache.fop.render,org.apache.avalon.framework.configuration,org.apache.batik.gvt,org.w3c.dom,org.apache.batik.bridge'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts.autodetect'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.commons.io.filefilter,org.apache.commons.io,org.apache.fop.fonts'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts.apps'/>
      <p n='uses' v='org.apache.commons.logging,javax.xml.transform,javax.xml.transform.stream,org.apache.fop.util,javax.xml.transform.dom,org.w3c.dom,org.apache.fop.fonts.type1,javax.xml.parsers,org.apache.fop,org.apache.fop.fonts.truetype,org.apache.fop.fonts,org.xml.sax'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='uses' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.ps'/>
      <p n='uses' v='org.apache.xmlgraphics.util.io,org.apache.xmlgraphics.fonts,org.apache.commons.io,javax.xml.transform,javax.xml.transform.stream,org.apache.xmlgraphics.ps.dsc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts.type1'/>
      <p n='uses' v='org.apache.commons.io,org.apache.commons.logging,org.apache.fop.fonts'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.pdf'/>
      <p n='uses' v='org.apache.xmlgraphics.util.io,org.apache.commons.io.output,org.apache.fop.util,org.apache.fop.fonts,org.apache.commons.logging,javax.crypto,org.apache.fop.fonts.type1,org.apache.xmlgraphics.xmp,javax.xml.transform,javax.xml.transform.stream,org.apache.fop.fonts.truetype,org.apache.commons.io,org.apache.xmlgraphics.xmp.schemas,org.apache.xmlgraphics.xmp.schemas.pdf,org.xml.sax,org.apache.avalon.framework'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.ps.dsc.events'/>
      <p n='uses' v='org.apache.xmlgraphics.ps,org.apache.xmlgraphics.ps.dsc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts.base14'/>
      <p n='uses' v='org.apache.fop.fonts'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts'/>
      <p n='uses' v='org.apache.avalon.framework,org.apache.xml.utils,javax.xml.transform,org.apache.commons.logging,org.apache.fop.util,org.apache.commons.io,org.apache.fop.apps,org.apache.fop.fonts.type1,javax.xml.transform.stream,org.apache.fop.fonts.truetype,org.apache.fop.fonts.apps,javax.xml.parsers,org.xml.sax.helpers,org.xml.sax,org.apache.fop.fonts.base14'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.java2d'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.java2d.ps'/>
      <p n='uses' v='org.apache.xmlgraphics.ps,org.apache.xmlgraphics.java2d'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.image.analyser'/>
      <p n='uses' v='org.apache.fop.image,org.apache.fop.apps,org.apache.commons.io,org.apache.commons.logging,org.apache.batik.parser,org.apache.batik.dom.svg,org.apache.fop.util,org.w3c.dom,org.apache.batik.bridge,org.apache.fop.svg,org.w3c.dom.svg,javax.xml.parsers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlgraphics.ps.dsc.tools'/>
      <p n='uses' v='org.apache.xmlgraphics.ps,org.apache.xmlgraphics.ps.dsc.events,org.apache.xmlgraphics.ps.dsc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.fonts.truetype'/>
      <p n='uses' v='org.apache.commons.io,org.apache.commons.logging,org.apache.fop.fonts'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.svg'/>
      <p n='uses' v='org.apache.batik.transcoder,org.apache.commons.logging,org.apache.batik.transcoder.image,org.apache.batik.bridge,org.apache.batik.dom.svg,org.apache.batik.transcoder.keys,org.apache.batik.dom.util,org.w3c.dom,org.xml.sax,org.apache.commons.logging.impl,org.apache.batik.gvt,org.w3c.dom.svg,org.apache.fop.fonts,org.apache.fop.pdf,org.apache.fop,org.apache.fop.render.pdf,org.apache.avalon.framework.configuration,org.apache.fop.render,org.apache.fop.apps,org.apache.fop.image,org.apache.fop.util,org.apache.xmlgraphics.java2d,org.apache.batik.ext.awt,org.apache.batik.util,org.apache.fop.image.analyser,org.apache.batik.gvt.text,org.apache.batik.gvt.font,org.apache.batik.gvt.renderer,org.apache.batik.parser,javax.xml.parsers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.render.ps.extensions'/>
      <p n='uses' v='org.apache.fop.fo.extensions,org.apache.fop.fo,org.apache.fop.apps,org.xml.sax,org.apache.commons.logging,org.apache.fop.util,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.avalon.framework.logger,org.apache.log4j,org.apache.log'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.fop.apps'/>
      <p n='uses' v='org.xml.sax,org.apache.fop.fo,org.apache.fop,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=legal)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package legal
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.activity)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.activity
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.component
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.configuration)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.configuration
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.container)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.container
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.logger
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.parameters)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.parameters
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.service)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.service
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.bridge)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.bridge
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.dom.svg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.dom.svg
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.dom.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.dom.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.ext.awt)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.ext.awt
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.gvt)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.gvt
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.gvt.font)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.gvt.font
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.gvt.renderer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.gvt.renderer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.gvt.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.gvt.text
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.parser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.transcoder)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.transcoder
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.transcoder.image)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.transcoder.image
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.transcoder.keys)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.transcoder.keys
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.batik.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.batik.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.filefilter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io.filefilter
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io.output
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.apps)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.apps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.area)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.area
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.area.inline)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.area.inline
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.datatypes)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.datatypes
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fo)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fo
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fo.extensions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fo.extensions
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fo.pagination)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fo.pagination
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts.apps)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts.apps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts.autodetect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts.autodetect
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts.base14)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts.base14
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts.truetype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts.truetype
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.fonts.type1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.fonts.type1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.image)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.image
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.image.analyser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.image.analyser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.pdf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.pdf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.render)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.render
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.render.pdf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.render.pdf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.render.ps)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.render.ps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.render.ps.extensions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.render.ps.extensions
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.svg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.svg
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fop.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.fop.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.utils)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xml.utils
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.fonts)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.fonts
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.java2d)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.java2d
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.java2d.ps)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.java2d.ps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.ps)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.ps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.ps.dsc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.ps.dsc
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.ps.dsc.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.ps.dsc.events
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.ps.dsc.tools)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.ps.dsc.tools
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.util.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.util.io
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.xmp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.xmp
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.xmp.schemas)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.xmp.schemas
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlgraphics.xmp.schemas.pdf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlgraphics.xmp.schemas.pdf
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.svg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.svg
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.pathvisio.regint/1.0.0' presentationname='org.pathvisio.regint' symbolicname='org.pathvisio.regint' uri='plugins/org.pathvisio.regint/1.0.0/org.pathvisio.regint-1.0.0.jar' version='1.0.0'>
    <size>
      90055
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.regint'/>
      <p n='symbolicname' v='org.pathvisio.regint'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.regint'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.gui)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.gui; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.sbgn/1.1.0' presentationname='SBGN plugin' symbolicname='org.pathvisio.sbgn' uri='plugins/org.pathvisio.sbgn/1.1.0/org.pathvisio.sbgn-1.1.0.jar' version='1.1.0'>
    <size>
      103968
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SBGN plugin'/>
      <p n='symbolicname' v='org.pathvisio.sbgn'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.sbgn'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.sbgn)(version&gt;=0.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.sbgn; 0.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.google.collect)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.google.collect; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.sbgn/1.0.0' presentationname='SBGN plugin' symbolicname='org.pathvisio.sbgn' uri='plugins/org.pathvisio.sbgn/1.0.0/org.pathvisio.sbgn-1.0.0.jar' version='1.0.0'>
    <size>
      103703
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SBGN plugin'/>
      <p n='symbolicname' v='org.pathvisio.sbgn'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.sbgn'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.sbgn)(version&gt;=0.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.sbgn; 0.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.google.collect)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.google.collect; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.swingworker/1.1.0' presentationname='org.pathvisio.swingworker' symbolicname='org.pathvisio.swingworker' uri='libs/org.pathvisio.swingworker/1.1.0/org.pathvisio.swingworker-1.1.0.jar' version='1.1.0'>
    <size>
      13502
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.swingworker'/>
      <p n='symbolicname' v='org.pathvisio.swingworker'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.swingworker'/>
      <p n='uses' v='javax.swing'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=org.jdesktop.swingworker)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jdesktop.swingworker
    </require>
  </resource>
  <resource id='org.pathvisio.typeconverter/1.0.0' presentationname='org.pathvisio.typeconverter' symbolicname='org.pathvisio.typeconverter' uri='plugins/org.pathvisio.typeconverter/1.0.0/org.pathvisio.typeconverter-1.0.0.jar' version='1.0.0'>
    <size>
      9677
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.typeconverter'/>
      <p n='symbolicname' v='org.pathvisio.typeconverter'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.wpclient/1.1.1' presentationname='org.pathvisio.wpclient' symbolicname='org.pathvisio.wpclient' uri='plugins/org.pathvisio.wpclient/1.1.1/org.pathvisio.wpclient-1.1.1.jar' version='1.1.1'>
    <size>
      94885
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.wpclient'/>
      <p n='symbolicname' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.webservice.api)(version&gt;=3.2.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.wikipathways.webservice.api; 3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.wpclient/1.1.2' presentationname='org.pathvisio.wpclient' symbolicname='org.pathvisio.wpclient' uri='plugins/org.pathvisio.wpclient/1.1.2/org.pathvisio.wpclient-1.1.2.jar' version='1.1.2'>
    <size>
      95140
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.wpclient'/>
      <p n='symbolicname' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='1.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.webservice.api)(version&gt;=3.2.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.wikipathways.webservice.api; 3.2.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.logging)(version&gt;=1.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.logging; 1.1.3
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.wpclient/1.0.0' presentationname='org.pathvisio.wpclient' symbolicname='org.pathvisio.wpclient' uri='plugins/org.pathvisio.wpclient/1.0.0/org.pathvisio.wpclient-1.0.0.jar' version='1.0.0'>
    <size>
      95134
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.wpclient'/>
      <p n='symbolicname' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.client)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.wikipathways.client; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.wpclient/1.1.4' presentationname='org.pathvisio.wpclient' symbolicname='org.pathvisio.wpclient' uri='plugins/org.pathvisio.wpclient/1.1.4/org.pathvisio.wpclient-1.1.4.jar' version='1.1.4'>
    <size>
      96173
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.wpclient'/>
      <p n='symbolicname' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='1.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.bridgerest)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.webservice.bridgerest; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.webservice.api)(version&gt;=3.3.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.wikipathways.webservice.api; 3.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.wpclient/1.1.3' presentationname='org.pathvisio.wpclient' symbolicname='org.pathvisio.wpclient' uri='plugins/org.pathvisio.wpclient/1.1.3/org.pathvisio.wpclient-1.1.3.jar' version='1.1.3'>
    <size>
      95467
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.wpclient'/>
      <p n='symbolicname' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wpclient'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml.rpc; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.wikipathways.webservice.api)(version&gt;=3.2.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.wikipathways.webservice.api; 3.2.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.bridgerest)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.webservice.bridgerest; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
  </resource>
  <resource id='org.pathvisio.ws.commons.util/1.0.2' presentationname='org.pathvisio.ws.commons.util' symbolicname='org.pathvisio.ws.commons.util' uri='libs/org.pathvisio.ws.commons.util/1.0.2/org.pathvisio.ws.commons.util-1.0.2.jar' version='1.0.2'>
    <size>
      35301
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.ws.commons.util'/>
      <p n='symbolicname' v='org.pathvisio.ws.commons.util'/>
      <p n='version' t='version' v='1.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.ws.commons.serialize'/>
      <p n='uses' v='org.xml.sax,org.w3c.dom,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.ws.commons.util'/>
      <p n='uses' v='org.xml.sax,javax.xml.namespace'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.serialize)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ws.commons.serialize
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ws.commons.util
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.pathvisio.xerces/2.5.0' presentationname='org.pathvisio.xerces' symbolicname='org.pathvisio.xerces' uri='libs/org.pathvisio.xerces/2.5.0/org.pathvisio.xerces-2.5.0.jar' version='2.5.0'>
    <size>
      937076
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.xerces'/>
      <p n='symbolicname' v='org.pathvisio.xerces'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.grammars'/>
      <p n='uses' v='org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.impl.xs.psvi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom3.bootstrap'/>
      <p n='uses' v='org.apache.xerces.dom3,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.util'/>
      <p n='uses' v='org.apache.xerces.impl.xs.psvi,org.apache.xerces.xni,org.apache.xerces.util,org.apache.xerces.xni.grammars,org.apache.xerces.impl.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml.dom'/>
      <p n='uses' v='org.apache.wml,org.apache.xerces.dom,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dtd.models'/>
      <p n='uses' v='org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xpath'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom3.as'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.ls'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.xs'/>
      <p n='uses' v='org.apache.xerces.impl.dv,org.apache.xerces.util,org.apache.xerces.impl.dv.util,org.apache.xerces.impl.xs.psvi,org.apache.xerces.xni,org.apache.xerces.impl.xs,org.apache.xerces.impl.xs.util,org.apache.xerces.impl.xpath.regex'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.util'/>
      <p n='uses' v='org.apache.xerces.xni,org.w3c.dom.ls,org.apache.xerces.xni.parser,org.apache.xerces.dom,org.apache.xerces.dom3,org.w3c.dom,org.apache.xerces.impl.xs.opti,org.xml.sax,org.apache.xerces.xni.grammars'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.opti'/>
      <p n='uses' v='org.apache.xerces.dom3,org.w3c.dom,org.apache.xerces.xni.parser,org.apache.xerces.xni,org.apache.xerces.util,org.apache.xerces.impl.xs,org.apache.xerces.impl,org.apache.xerces.xni.grammars,org.apache.xerces.parsers,org.apache.xerces.impl.validation,org.apache.xerces.impl.dv,org.apache.xerces.impl.msg'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.identity'/>
      <p n='uses' v='org.apache.xerces.impl.dv,org.apache.xerces.impl.xpath,org.apache.xerces.impl.xs.psvi,org.apache.xerces.impl.xs,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.impl.validation,org.apache.xerces.impl.xs.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp'/>
      <p n='uses' v='org.xml.sax.helpers,org.xml.sax,org.apache.xerces.parsers,javax.xml.parsers,org.apache.xerces.dom,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.ls'/>
      <p n='uses' v='org.w3c.dom,org.apache.xerces.dom3,org.w3c.dom.traversal,org.w3c.dom.events'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.impl.xs.psvi,org.apache.xerces.impl.xs.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.msg'/>
      <p n='uses' v='org.apache.xerces.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom.events'/>
      <p n='uses' v='org.w3c.dom.events,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni'/>
      <p n='uses' v='org.apache.xerces.xni.parser'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.psvi'/>
      <p n='uses' v='org.apache.xerces.impl.xs.psvi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs'/>
      <p n='uses' v='org.apache.xerces.impl.xs.util,org.apache.xerces.impl.xs.psvi,org.apache.xerces.xni.psvi,org.apache.xerces.impl.dv,org.apache.xerces.util,org.apache.xerces.xni.grammars,org.apache.xerces.parsers,org.apache.xerces.impl.xs.identity,org.apache.xerces.xni.parser,org.apache.xerces.xni,org.apache.xerces.impl.xs.traversers,org.xml.sax,org.apache.xerces.impl.xs.models,org.apache.xerces.impl,org.apache.xerces.impl.validation,org.w3c.dom,org.apache.xerces.impl.dv.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl'/>
      <p n='uses' v='org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.util,org.apache.xerces.impl.validation,org.apache.xerces.impl.io,org.apache.xerces.impl.dtd'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.io'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.impl.msg'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.html.dom'/>
      <p n='uses' v='org.w3c.dom.html,org.apache.xerces.dom,org.w3c.dom,org.xml.sax,org.apache.xerces.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xinclude'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.impl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.parsers'/>
      <p n='uses' v='org.apache.xerces.xni.parser,org.w3c.dom,org.apache.xerces.util,org.w3c.dom.ls,org.apache.xerces.impl.dv,org.apache.xerces.dom,org.apache.xerces.xni.psvi,org.apache.xerces.xni,org.apache.xerces.impl.xs.psvi,org.apache.xerces.dom3,org.xml.sax.helpers,org.xml.sax,org.xml.sax.ext,org.apache.xerces.xni.grammars,org.apache.xerces.impl.xs,org.apache.xerces.dom3.as,org.apache.xerces.impl,org.apache.xerces.impl.validation,org.apache.xerces.impl.dtd,org.apache.xerces.impl.msg,org.apache.xerces.xinclude'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.parser'/>
      <p n='uses' v='org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.traversers'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.impl.validation,org.apache.xerces.impl.xs.util,org.apache.xerces.impl.dv,org.apache.xerces.impl.xs.psvi,org.apache.xerces.xni,org.apache.xerces.impl.xs,org.w3c.dom,org.apache.xerces.impl.xs.identity,org.apache.xerces.impl.xpath,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.impl.xs.opti,org.apache.xerces.impl,org.apache.xerces.impl.dv.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dv.dtd'/>
      <p n='uses' v='org.apache.xerces.impl.dv,org.apache.xerces.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.validation'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.impl.dv,org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.dtd'/>
      <p n='uses' v='org.apache.xerces.xni,org.apache.xerces.util,org.apache.xerces.impl.validation,org.apache.xerces.xni.grammars,org.apache.xerces.impl.dv,org.apache.xerces.impl.dtd.models,org.apache.xerces.xni.parser,org.apache.xerces.impl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.models'/>
      <p n='uses' v='org.apache.xerces.impl.dtd.models,org.apache.xerces.impl.xs.psvi,org.apache.xerces.impl.xs,org.apache.xerces.util,org.apache.xerces.xni.parser,org.apache.xerces.impl,org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xpath.regex'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serialize'/>
      <p n='uses' v='org.apache.xerces.util,org.w3c.dom.ls,org.xml.sax.ext,org.apache.xerces.dom,org.apache.xerces.dom3,org.w3c.dom,org.xml.sax,sun.io,org.w3c.dom.html,org.apache.xerces.xni,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom'/>
      <p n='uses' v='org.apache.xerces.parsers,org.apache.xerces.dom3.as,org.w3c.dom,org.apache.xerces.impl.xs,org.apache.xerces.dom3,org.apache.xerces.xni,org.apache.xerces.impl.dv.xs,org.apache.xerces.util,org.w3c.dom.ls,org.apache.xml.serialize,org.apache.xerces.impl,org.w3c.dom.events,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.impl.validation,org.apache.xerces.impl.msg,org.apache.xerces.dom3.bootstrap,org.apache.xerces.impl.dv,org.apache.xerces.impl.xs.psvi,org.apache.xerces.xni.psvi,org.apache.xerces.dom.events,org.w3c.dom.traversal,org.w3c.dom.ranges'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.impl.xs.psvi'/>
      <p n='uses' v='org.apache.xerces.xni.psvi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom3'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.html'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.html.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.html.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.wml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.wml
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.wml.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.wml.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom.events
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom3)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom3
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom3.as)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom3.as
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom3.bootstrap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom3.bootstrap
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dtd)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dtd
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dtd.models)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dtd.models
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dv)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dv
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dv.dtd)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dv.dtd
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dv.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dv.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.dv.xs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.dv.xs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.io
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.msg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.msg
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xpath.regex)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xpath.regex
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.identity)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.identity
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.models)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.models
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.opti)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.opti
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.psvi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.psvi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.traversers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.traversers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.impl.xs.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.impl.xs.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.jaxp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.jaxp
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xinclude)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.xinclude
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.xni
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.grammars)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.xni.grammars
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.xni.parser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.psvi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.xni.psvi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xml.serialize
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.events
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.html
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ranges)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.ranges
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.traversal)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom.traversal
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=sun.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.io
    </require>
  </resource>
  <resource id='org.pathvisio.xmlrpc/1.0.0' presentationname='PathVisioRPC' symbolicname='org.pathvisio.xmlrpc' uri='plugins/org.pathvisio.xmlrpc/1.0.0/org.pathvisio.xmlrpc-1.0.0.jar' version='1.0.0'>
    <size>
      34373
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='PathVisioRPC'/>
      <p n='symbolicname' v='org.pathvisio.xmlrpc'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gex)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gex; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.statistics)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.statistics; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.visualization)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.visualization; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb.construct)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb.construct; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.httpclient)(version&gt;=3.0.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.httpclient; 3.0.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.data)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.data; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.xmlrpc)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.xmlrpc; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.htmlexport)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.htmlexport; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.codec)(version&gt;=1.5.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.codec; 1.5.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.ws.commons.util)(version&gt;=1.0.2))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.ws.commons.util; 1.0.2
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='org.pathvisio.xmlrpc.client/3.1.3' presentationname='org.pathvisio.xmlrpc.client' symbolicname='org.pathvisio.xmlrpc.client' uri='libs/org.pathvisio.xmlrpc.client/3.1.3/org.pathvisio.xmlrpc.client-3.1.3.jar' version='3.1.3'>
    <size>
      59036
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.xmlrpc.client'/>
      <p n='symbolicname' v='org.pathvisio.xmlrpc.client'/>
      <p n='version' t='version' v='3.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.client'/>
      <p n='uses' v='org.apache.xmlrpc,org.apache.xmlrpc.common,org.apache.xmlrpc.serializer,org.apache.commons.httpclient.methods,org.apache.xmlrpc.util,org.xml.sax,org.apache.commons.httpclient.auth,org.apache.commons.httpclient.params,org.apache.commons.httpclient,javax.net,javax.net.ssl,org.apache.xmlrpc.parser'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.client.util'/>
      <p n='uses' v='org.apache.xmlrpc.common,org.apache.xmlrpc.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.ws.commons.util)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.ws.commons.util; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.xmlrpc.common)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.xmlrpc.common; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.auth
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.client
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.client.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.client.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.common
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.parser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.serializer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.serializer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.util
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.pathvisio.xmlrpc.common/3.1.3' presentationname='org.pathvisio.xmlrpc.common' symbolicname='org.pathvisio.xmlrpc.common' uri='libs/org.pathvisio.xmlrpc.common/3.1.3/org.pathvisio.xmlrpc.common-3.1.3.jar' version='3.1.3'>
    <size>
      109657
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.pathvisio.xmlrpc.common'/>
      <p n='symbolicname' v='org.pathvisio.xmlrpc.common'/>
      <p n='version' t='version' v='3.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.util'/>
      <p n='uses' v='org.apache.xmlrpc.common,org.apache.ws.commons.util,org.apache.xmlrpc,javax.xml.parsers,org.xml.sax'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.common'/>
      <p n='uses' v='org.w3c.dom,org.apache.xmlrpc.parser,org.apache.ws.commons.util,org.apache.xmlrpc.serializer,org.xml.sax,org.apache.xmlrpc.util,org.apache.xmlrpc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc'/>
      <p n='uses' v='org.apache.xmlrpc.common'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.jaxb'/>
      <p n='uses' v='org.apache.xmlrpc,org.apache.xmlrpc.parser,javax.xml.bind,org.xml.sax,org.apache.xmlrpc.serializer,org.apache.xmlrpc.common,org.apache.ws.commons.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.parser'/>
      <p n='uses' v='org.xml.sax,javax.xml.namespace,org.apache.ws.commons.util,org.apache.xmlrpc.common,javax.xml.parsers,org.apache.ws.commons.serialize,org.w3c.dom,org.apache.xmlrpc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlrpc.serializer'/>
      <p n='uses' v='org.apache.xmlrpc.common,org.apache.xmlrpc,org.apache.ws.commons.serialize,org.xml.sax,org.apache.ws.commons.util,org.xml.sax.helpers,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.ws.commons.util)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.ws.commons.util; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=javax.xml)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle javax.xml; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.serialize)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ws.commons.serialize
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ws.commons.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ws.commons.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.common
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.jaxb)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.jaxb
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.parser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.serializer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.serializer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlrpc.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlrpc.util
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.sbgn/0.2.0' presentationname='org.sbgn' symbolicname='org.sbgn' uri='libs/org.sbgn/0.2/org.sbgn-0.2.jar' version='0.2.0'>
    <size>
      2592820
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.sbgn'/>
      <p n='symbolicname' v='org.sbgn'/>
      <p n='version' t='version' v='0.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sbgn'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sbgn.bindings'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.saxon'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.jdom)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package org.jdom ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.input)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package org.jdom.input ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.output)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package org.jdom.output ;version=1.1.0
    </require>
  </resource>
  <resource id='org.w3c.css.sac/1.3.1.v200903091627' presentationname='W3C CSS SAC' symbolicname='org.w3c.css.sac' uri='libs/org.w3c.css.sac/1.3.1/org.w3c.css.sac-1.3.1.jar' version='1.3.1.v200903091627'>
    <size>
      32952
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='W3C CSS SAC'/>
      <p n='symbolicname' v='org.w3c.css.sac'/>
      <p n='version' t='version' v='1.3.1.v200903091627'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.css.sac'/>
      <p n='provenance' v='W3C'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.css.sac.helpers'/>
      <p n='provenance' v='W3C'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))
    </require>
  </resource>
  <resource id='org.w3c.dom.events/3.0.0.draft20060413_v201105210656' presentationname='W3C DOM Level 3 Events' symbolicname='org.w3c.dom.events' uri='libs/org.w3c.dom.events/3.0.0/org.w3c.dom.events-3.0.0.jar' version='3.0.0.draft20060413_v201105210656'>
    <size>
      13309
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='W3C DOM Level 3 Events'/>
      <p n='symbolicname' v='org.w3c.dom.events'/>
      <p n='version' t='version' v='3.0.0.draft20060413_v201105210656'/>
    </capability>
    <capability name='package'>
      <p n='draft' v='20060413'/>
      <p n='package' v='org.w3c.dom.events'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.w3c.dom.smil/1.0.1.v200903091627' presentationname='W3C SMIL DOM' symbolicname='org.w3c.dom.smil' uri='libs/org.w3c.dom.smil/1.0.1/org.w3c.dom.smil-1.0.1.jar' version='1.0.1.v200903091627'>
    <size>
      19446
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='W3C SMIL DOM'/>
      <p n='symbolicname' v='org.w3c.dom.smil'/>
      <p n='version' t='version' v='1.0.1.v200903091627'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.smil'/>
      <p n='provenance' v='W3C'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4)(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4)(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))
    </require>
  </resource>
  <resource id='org.w3c.dom.svg/1.1.0.v201011041433' presentationname='W3C SVG DOM' symbolicname='org.w3c.dom.svg' uri='libs/org.w3c.dom.svg/1.1.0/org.w3c.dom.svg-1.1.0.jar' version='1.1.0.v201011041433'>
    <size>
      87897
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='W3C SVG DOM'/>
      <p n='symbolicname' v='org.w3c.dom.svg'/>
      <p n='version' t='version' v='1.1.0.v201011041433'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.svg'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.w3c.dom.smil)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.w3c.dom.smil; [1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.4)(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.4)(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))
    </require>
  </resource>
  <resource id='org.wikipathways.client/3.1.1' presentationname='org.wikipathways.client' symbolicname='org.wikipathways.client' uri='libs/org.wikipathways.client/3.1.1/org.wikipathways.client-3.1.1.jar' version='3.1.1'>
    <size>
      1861514
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.wikipathways.client'/>
      <p n='symbolicname' v='org.wikipathways.client'/>
      <p n='version' t='version' v='3.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wikipathways.webservice'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.bots'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=derby)(version&gt;=10.4.2000000))' multiple='false' name='bundle' optional='false'>
      Require Bundle derby; 10.4.2000000
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.apache.commons.logging)(version&gt;=1.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.apache.commons.logging;
       1.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.discovery)(version&gt;=0.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.discovery; 0.2.0
    </require>
  </resource>
  <resource id='org.wikipathways.webservice.api/3.2.3' presentationname='org.wikipathways.webservice.api' symbolicname='org.wikipathways.webservice.api' uri='libs/org.wikipathways.webservice.api/3.2.3/org.wikipathways.webservice.api-3.2.3.jar' version='3.2.3'>
    <size>
      899092
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.wikipathways.webservice.api'/>
      <p n='symbolicname' v='org.wikipathways.webservice.api'/>
      <p n='version' t='version' v='3.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wikipathways.webservice'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.client.utils'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=2.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 2.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.codec)(version&gt;=1.6.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.codec; 1.6.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.io)(version&gt;=2.4.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.io; 2.4.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.logging)(version&gt;=1.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.logging; 1.1.3
    </require>
  </resource>
  <resource id='org.wikipathways.webservice.api/3.2.1' presentationname='org.wikipathways.webservice.api' symbolicname='org.wikipathways.webservice.api' uri='libs/org.wikipathways.webservice.api/3.2.1/org.wikipathways.webservice.api-3.2.1.jar' version='3.2.1'>
    <size>
      898593
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.wikipathways.webservice.api'/>
      <p n='symbolicname' v='org.wikipathways.webservice.api'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.wikipathways.webservice'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.wikipathways.client.utils'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.1
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.bio)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.bio; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.jdom)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.jdom; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.codec)(version&gt;=1.6.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.codec; 1.6.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.io)(version&gt;=2.4.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.commons.io; 2.4.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=com.springsource.org.apache.commons.logging)(version&gt;=1.1.1))' multiple='false' name='bundle' optional='false'>
      Require Bundle com.springsource.org.apache.commons.logging;
       1.1.1
    </require>
  </resource>
  <resource id='pvplugins-PathSBML/1.0.0' presentationname='PathSBML-plugin' symbolicname='pvplugins-PathSBML' uri='plugins/pvplugins-PathSBML/1.0.0/pvplugins-PathSBML-1.0.0.jar' version='1.0.0'>
    <description>
      Import, Validate and Export SBML models
    </description>
    <size>
      9333060
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='PathSBML-plugin'/>
      <p n='symbolicname' v='pvplugins-PathSBML'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.sbml'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.sbml.peer'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.1.3))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.1.3
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.sbgn)(version&gt;=0.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.sbgn; 0.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.sbgn)(version&gt;=1.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.sbgn; 1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.bridgedb)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.bridgedb
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='pvplugins-bridgedbSettings/1.0.0' presentationname='pvplugins-bridgedbSettings' symbolicname='pvplugins-bridgedbSettings' uri='plugins/pvplugins-bridgedbSettings/1.0.0/pvplugins-bridgedbSettings-1.0.0.jar' version='1.0.0'>
    <size>
      26758
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='pvplugins-bridgedbSettings'/>
      <p n='symbolicname' v='pvplugins-bridgedbSettings'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.jgoodies.forms)(version&gt;=1.2.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.jgoodies.forms; 1.2.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.gui)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb.gui; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.bridgerest)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.bridgerest; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.biomart)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.biomart; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.cronos)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.cronos; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.picr)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.picr; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.file.orthoxml)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.file.orthoxml; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.webservice.synergizer)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.webservice.synergizer; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb.rdb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='true'>
      Require Bundle org.bridgedb.rdb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=com.mysql.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.mysql.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
  </resource>
  <resource id='pvplugins-qsearch/1.0.0' presentationname='pvplugins-qsearch' symbolicname='pvplugins-qsearch' uri='plugins/pvplugins-qsearch/1.0.0/pvplugins-qsearch-1.0.0.jar' version='1.0.0'>
    <size>
      3948
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='pvplugins-qsearch'/>
      <p n='symbolicname' v='pvplugins-qsearch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.pathvisio.qsearch'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.core)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.core; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.gui)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.gui; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.pathvisio.desktop)(version&gt;=3.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.pathvisio.desktop; 3.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.bridgedb)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.bridgedb; 1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
  </resource>
</repository>